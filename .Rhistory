activity <- read.csv("activity.csv")
setwd("C:/Users/yuenmun/Dropbox/Reproducible Research")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
suppressMessages(library(dplyr))
totalstep <-
activity %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarise(total = sum(steps))
suppressMessages(library(ggplot2))
ggplot(totalstep, aes(x=total)) +
geom_histogram(aes(fill = ..count..), binwidth=1000)
daily <- activity %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps, na.rm = T))
ggplot(daily, aes(x = interval, y = avg_steps)) +
geom_line() +
ggtitle("Average steps per 5-minute interval")
daily[which.max(daily$avg_steps), ]
merge_data <- full_join(activity, daily, by="interval")
merge_data$steps[is.na(merge_data$steps)] <- merge_data$avg_steps[is.na(merge_data$steps)]
activity_alldata <- select(merge_data, steps, date, interval)
# Creating another copy of data frame for later use
activity_replacedNA <- activity_alldata
fig1 <- ggplot(totalstep, aes(x=total)) +
geom_histogram(aes(fill = ..count..), binwidth=1000) +
ylim(0,20) +
ggtitle("Data with NA removed")
# Calculate the total of steps by date
activity_alldata <- activity_alldata %>%
group_by(date) %>%
summarise(total = sum(steps))
# Plotting the histogram with replaced NA value data
fig2 <- ggplot(activity_alldata , aes(x=total)) +
geom_histogram(aes(fill = ..count..), binwidth=1000) +
ylim(0,20) +
ggtitle("Data with NA replaced")
# Plot both figures side by side
suppressMessages(library(gridExtra))
grid.arrange(fig1, fig2, ncol=2)
summarydata <- matrix(c(mean(totalstep$total),
mean(activity_alldata$total),
median(totalstep$total),
median(activity_alldata$total)),
nrow=2,
ncol=2)
# Rename matrix for better presentation
dimnames(summarydata) = list(c("exclude_NA", "include_NA"), c("mean", "median"))
summarydata
suppressMessages(library(plyr))
daysData <- activity_replacedNA %>%
mutate(daytype = as.factor(format(date, "%a")))
daysData$daytype <- revalue(daysData$daytype, c("Mon" = "Weekday",
"Tue" = "Weekday",
"Wed" = "Weekday",
"Thu" = "Weekday",
"Fri" = "Weekday",
"Sat" = "Weekend",
"Sun" = "Weekend"))
days_weekday <- subset(daysData, daytype == "Weekday")
days_weekend <- subset(daysData, daytype == "Weekend")
View(days_weekday)
View(days_weekday)
View(activity)
days_weekend <- select(interval, steps, date)
days_weekend <- select(days_weekend, interval, steps, date)
days_weekday <- subset(daysData, daytype == "Weekday")
days_weekday <- select(days_weekday, interval, steps, date)
days_weekend <- subset(daysData, daytype == "Weekend")
days_weekend <- select(days_weekend, interval, steps, date)
weekday <- days_weekday %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps, na.rm = T))
weekday <- days_weekday %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps)
View(weekday)
weekday <- days_weekday %>%
group_by(interval)
weekday <- days_weekday %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps)
weekday <- days_weekday %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps))
days_weekday <- subset(daysData, daytype == "Weekday")
days_weekday <- select(days_weekday, interval, steps, date)
days_weekend <- subset(daysData, daytype == "Weekend")
days_weekend <- select(days_weekend, interval, steps, date)
weekday <- days_weekday %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps))
weekday <- days_weekday %>%
group_by(interval)
daily <- activity %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps, na.rm = T))
days_weekday <- subset(daysData, daytype == "Weekday")
weekday <- days_weekday %>%
group_by(interval)
eekday <- days_weekday %>% group_by(interval)
weekday <- days_weekday %>% group_by(interval) %>% summarise(avg_steps = mean(steps))
detach(package:plyr)
weekday <- days_weekday %>% group_by(interval) %>% summarise(avg_steps = mean(steps))
fig3<- ggplot(weekday, aes(x=interval, y=avg_steps)) + geom_line()
days_weekday <- subset(daysData, daytype == "Weekday")
days_weekday <- select(days_weekday, interval, steps, date)
days_weekend <- subset(daysData, daytype == "Weekend")
days_weekend <- select(days_weekend, interval, steps, date)
detach(package:plyr)
weekday <-  days_weekday %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps))
weekend <-  days_weekend %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps))
fig3<- ggplot(weekday, aes(x=interval, y=avg_steps)) + geom_line()
fig4<- ggplot(weekend, aes(x=interval, y=avg_steps)) + geom_line()
grid.arrange(fig3, fig4, nrow=2)
fig3<-  ggplot(weekday, aes(x=interval, y=avg_steps)) +
geom_line() +
ylim(0,300) +
ggtitle("Weekday average step per interval")
fig4<-  ggplot(weekend, aes(x=interval, y=avg_steps)) +
geom_line() +
ylim(0,300) +
ggtitle("Weekday average step per interval")
grid.arrange(fig3, fig4, nrow=2)
